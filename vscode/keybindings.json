// Place your key bindings in this file to overwrite the defaults
[
    // vim
    {
        "key": "ctrl+l",
        "command": "-extension.vim_navigateCtrlL",
        "when": "editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.nextEditor",
        "when": "!terminalFocus && !sideBarFocus"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.previousEditor",
        "when": "!terminalFocus && !sideBarFocus"
    },
    {
        "key": "shift+cmd+[",
        "command": "-workbench.action.previousEditor"
    },
    // explorer: toggle
    {
        "key": "ctrl+k ctrl+s",
        "command": "workbench.action.focusSideBar",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k ctrl+s",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "!editorFocus"
    },
    // explorer: open
    {
        "key": "Enter",
        "command": "list.select",
        "when": "explorerViewletFocus && explorerViewletVisible && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "t",
        "command": "list.select",
        "when": "explorerViewletFocus && explorerViewletVisible && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "Enter",
        "command": "list.toggleExpand",
        "when": "explorerViewletFocus && explorerViewletVisible && explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "s",
        "command": "explorer.openToSide",
        "when": "explorerViewletFocus && explorerViewletVisible && !explorerResourceIsFolder && !inputFocus"
    },
    // explorer: rename
    {
        "key": "m r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    // explorer: copy
    {
        "key": "m c",
        "command": "filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    // explorer: paste
    {
        "key": "m p",
        "command": "filesExplorer.paste",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    // explorer: new file
    {
        "key": "m a",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    // explorer: delete file
    {
        "key": "m d",
        "command": "deleteFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    // explorer: new folder
    {
        "key": "m f",
        "command": "explorer.newFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    // terminal: toggle
    {
        "key": "ctrl+space ctrl+space",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+space ctrl+space",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    // terminal: new
    {
        "key": "ctrl+space ctrl+t",
        "command": "workbench.action.terminal.new"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new"
    },
    // terminal: move focus
    {
        "key": "ctrl+space ctrl+l",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+space ctrl+h",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    // terminal: kill
    {
        "key": "ctrl+space ctrl+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
]

